/* Base styles and reset */
:root {
  --primary-color: #646cff;
  --primary-hover: #535bf2;
  --secondary-color: #61dafb;
  --text-color: #213547;
  --light-gray: #f8f8f8;
  --border-color: #ddd;
  --error-color: #e53935;
  --success-color: #4caf50;
  --warning-color: #ff9800;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Inter", "Helvetica Neue", Arial, sans-serif;
  color: var(--text-color);
  line-height: 1.5;
}

#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
}

/* App container layout */
.app-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  min-height: 100vh;
}

/* Header styles */
.app-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 1.5rem;
  border-bottom: 1px solid var(--border-color);
}

.app-header h1 {
  font-size: 1.8rem;
  font-weight: 600;
}

/* Service status indicators */
.service-status {
  display: flex;
  gap: 0.8rem;
  align-items: center;
}

.status-indicator {
  display: flex;
  align-items: center;
  padding: 0.25rem 0.6rem;
  border-radius: 4px;
  font-size: 0.8rem;
  font-weight: 500;
}

.status-indicator::before {
  content: "";
  display: inline-block;
  width: 0.6rem;
  height: 0.6rem;
  border-radius: 50%;
  margin-right: 0.4rem;
}

.status-indicator.online {
  background-color: rgba(76, 175, 80, 0.1);
  color: var(--success-color);
}

.status-indicator.online::before {
  background-color: var(--success-color);
}

.status-indicator.offline {
  background-color: rgba(229, 57, 53, 0.1);
  color: var(--error-color);
}

.status-indicator.offline::before {
  background-color: var(--error-color);
}

.refresh-button {
  background: transparent;
  border: none;
  cursor: pointer;
  font-size: 1.2rem;
  color: var(--text-color);
  padding: 0.4rem;
  border-radius: 4px;
  transition: background-color 0.2s ease;
}

.refresh-button:hover {
  background-color: var(--light-gray);
}

/* Main content layout */
.app-main {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  min-height: 800px;
}

/* Input section styles */
.input-section {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.text-input-container {
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
}

.text-input-container label {
  font-weight: 500;
  text-align: left;
}

.text-input-container textarea {
  width: 100%;
  padding: 0.8rem;
  border: 1px solid var(--border-color);
  border-radius: 6px;

  font-family: inherit;
  min-height: 120px;
  resize: none;
}

.text-input-container textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(100, 108, 255, 0.1);
}

.example-buttons {
  display: flex;
  gap: 0.6rem;
  align-items: center;
  flex-wrap: wrap;
}

.example-buttons span {
  font-size: 0.9rem;
  color: #666;
}

.example-buttons button {
  background-color: var(--light-gray);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 0.3rem 0.6rem;
  font-size: 0.85rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.example-buttons button:hover {
  background-color: #eaeaea;
}

.action-buttons {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.action-button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 6px;
  padding: 0.7rem 1rem;
  font-size: 0.95rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.action-button:hover:not(:disabled) {
  background-color: var(--primary-hover);
}

.action-button:disabled {
  background-color: #b0b0b0;
  cursor: not-allowed;
  opacity: 0.7;
}

.action-button.loading {
  position: relative;
  text-indent: -9999px;
}

.action-button.loading::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1.2rem;
  height: 1.2rem;
  margin-top: -0.6rem;
  margin-left: -0.6rem;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: white;
  border-radius: 50%;
  animation: spinner 0.8s linear infinite;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

/* Error message */
.error-message {
  padding: 0.8rem;
  background-color: rgba(229, 57, 53, 0.08);
  border-left: 3px solid var(--error-color);
  color: var(--error-color);
  text-align: left;
  border-radius: 0 4px 4px 0;
}

/* Preprocessed text */
.preprocessed-text {
  text-align: left;
  padding: 0.8rem;
  background-color: var(--light-gray);
  border-radius: 6px;
}

.preprocessed-text h3 {
  font-size: 0.95rem;
  margin-bottom: 0.4rem;
  color: #666;
}

.preprocessed-text p {
  font-size: 0.9rem;
  white-space: pre-wrap;
  word-break: break-word;
}

/* Parsed data */
.parsed-data {
  text-align: left;
  padding: 0.8rem;
  background-color: var(--light-gray);
  border-radius: 6px;
}

.parsed-data h3 {
  font-size: 0.95rem;
  margin-bottom: 0.6rem;
  color: #666;
}

.elements-summary {
  display: flex;
  gap: 1.5rem;
}

.element-count {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.element-count .count {
  font-size: 1.8rem;
  font-weight: 600;
  color: var(--primary-color);
}

.element-count .label {
  font-size: 0.85rem;
  color: #666;
}

/* Visualization section */
.visualization-section {
  flex: 1;
  min-height: 600px;
  display: flex;
  flex-direction: column;
}

.flow-container {
  width: 100%;
  height: 100%;
  flex: 1;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  overflow: hidden;
  position: relative;
  background-color: white;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.no-visualization-message {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  min-height: 400px;
  text-align: center;
  padding: 2rem;
  background-color: var(--light-gray);
  border-radius: 8px;
  border: 1px dashed var(--border-color);
}

.no-visualization-message p {
  color: #666;
  margin-bottom: 1rem;
}

.steps-hint {
  font-size: 0.85rem;
  text-align: left;
  line-height: 1.7;
  background-color: white;
  padding: 1rem;
  border-radius: 6px;
  max-width: 320px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

/* ReactFlow styles */
.react-flow {
  width: 100%;
  height: 100%;
}

.react-flow__renderer {
  width: 100%;
  height: 100%;
}

.download-panel {
  padding: 0.5rem;
}

.download-panel button {
  background-color: white;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 0.4rem 0.8rem;
  font-size: 0.85rem;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.download-panel button:hover {
  background-color: var(--light-gray);
}

/* Custom node styling */
.react-flow__node-customNode {
  padding: 0;
  border-radius: 8px;
  border: none;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  width: auto;
  max-width: 200px;
  overflow: hidden;
}

/* Logo animation from your original CSS */
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  filter: drop-shadow(0 0 2em rgba(100, 108, 255, 0.67));
}

.logo.react:hover {
  filter: drop-shadow(0 0 2em rgba(97, 218, 251, 0.67));
}
.wake-button {
  margin-left: 10px;
  padding: 5px 10px;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.wake-button:hover:not(:disabled) {
  background-color: #45a049;
}

.wake-button:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.wake-button.loading {
  opacity: 0.7;
}
@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

/* Responsive layout */
@media (min-width: 1024px) {
  .app-main {
    flex-direction: row;
    align-items: stretch;
  }

  .input-section {
    width: 40%;
  }

  .visualization-section {
    width: 60%;
  }

  .action-buttons {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .action-button {
    flex: 1;
    min-width: 150px;
  }
}
